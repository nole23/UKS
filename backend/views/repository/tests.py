from django.test import TestCase, Client
from django.urls import reverse
from django.core.files.base import ContentFile
from rest_framework import status
from http import HTTPStatus
from datetime import datetime, timedelta

from users.models import Files, User, Root_Tree, Project, Role, List_Project_User

# Create your tests here.

# inicijalizacija app-i klijenta
client = Client()

class RepositoryTest(TestCase):
    def setUp(self):
        self.data = {
            'name': 'test',
            'description': 'test',
            'type_project': False,
        }
        User.objects.create(first_name="Dejan", last_name="JovanoviÄ‡", email="a@gmail.com", username="a", password="123")
        Role.objects.create(role_name="O")
        Role.objects.create(role_name="C")
        Role.objects.create(role_name="V")

    def test_post_save(self):

        user = User.objects.get(username="a")


        title = 'README.md'
        text = 'Generated by Git v1.0.0 on ' + str(datetime.now())
        content = ContentFile(text)
        content.name = 'master/' + title

        files = Files.objects.create(
            name=title, cover=content, dateCreate=datetime.now(), user=user)

        rootTree = Root_Tree.objects.create(
            name_branch='master', date_create=datetime.now(), user_create=user)
        rootTree.files.add(files)

        project = Project.objects.create(name=self.data['name'], description=self.data['description'], date_create=datetime.now(
        ), type_project=self.data['type_project'])
        project.root_tree.add(rootTree)

        role = Role.objects.get(id=1)

        lpu = List_Project_User.objects.create(
            project=project, user=user, role=role)

        self.assertEqual(files.name, title)
        self.assertEqual(rootTree.name_branch, 'master')
        self.assertEqual(project.name, self.data['name'])
        self.assertEqual(lpu.project, project)

    def get_test(self):
        pass